
type UploadHistory {
  id: ID!
  username: String!
  filename: String!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}

input ModelStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelBooleanInput {
  ne: Boolean
  eq: Boolean
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

enum ModelAttributeTypes {
  binary
  binarySet
  bool
  list
  map
  number
  numberSet
  string
  stringSet
  _null
}

input ModelSizeInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
}

enum ModelSortDirection {
  ASC
  DESC
}

type ModelUploadHistoryConnection {
  items: [UploadHistory]!
  nextToken: String
}

input ModelUploadHistoryFilterInput {
  id: ModelIDInput
  username: ModelStringInput
  filename: ModelStringInput
  and: [ModelUploadHistoryFilterInput]
  or: [ModelUploadHistoryFilterInput]
  not: ModelUploadHistoryFilterInput
}

type Query {
  getUploadHistory(id: ID!): UploadHistory
  listUploadHistories(filter: ModelUploadHistoryFilterInput, limit: Int, nextToken: String): ModelUploadHistoryConnection
}

input ModelUploadHistoryConditionInput {
  username: ModelStringInput
  filename: ModelStringInput
  and: [ModelUploadHistoryConditionInput]
  or: [ModelUploadHistoryConditionInput]
  not: ModelUploadHistoryConditionInput
}

input CreateUploadHistoryInput {
  id: ID
  username: String!
  filename: String!
}

input UpdateUploadHistoryInput {
  id: ID!
  username: String
  filename: String
}

input DeleteUploadHistoryInput {
  id: ID!
}

type Mutation {
  createUploadHistory(input: CreateUploadHistoryInput!, condition: ModelUploadHistoryConditionInput): UploadHistory
  updateUploadHistory(input: UpdateUploadHistoryInput!, condition: ModelUploadHistoryConditionInput): UploadHistory
  deleteUploadHistory(input: DeleteUploadHistoryInput!, condition: ModelUploadHistoryConditionInput): UploadHistory
}

type Subscription {
  onCreateUploadHistory: UploadHistory @aws_subscribe(mutations: ["createUploadHistory"])
  onUpdateUploadHistory: UploadHistory @aws_subscribe(mutations: ["updateUploadHistory"])
  onDeleteUploadHistory: UploadHistory @aws_subscribe(mutations: ["deleteUploadHistory"])
}

